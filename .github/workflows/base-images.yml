name: Build Base Images

on:
  push:
  schedule:
    - cron: "0 2 * * 1" # Every Monday at 2 AM UTC
  workflow_dispatch:

env:
  # Logically branching out from a global state environment variable
  # instead of step-wise ($GITHUB_OUTPUT) conditions, to keep the workflow
  # simple and multiple boolean conditional checks in later steps.
  SHOULD_BUILD: false

jobs:
  build-base-images:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        base_type: [ ubuntu, alpine ]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check if built by schedule or manually
        if: |
          github.event_name == 'schedule' ||
          github.event_name == 'workflow_dispatch'
        run: |
          echo "Was triggered by ${{ github.event_name }} - will build"
          echo "SHOULD_BUILD=true" >> $GITHUB_ENV

      - name: Check if relevant files changed
        if: env.SHOULD_BUILD != 'true'
        run: |
          if git diff --name-only origin/master..HEAD | grep -E "(Dockerfile\.base|\.github/workflows/base-images\.yml)"; then
            echo "Relevant files changed - will build"
            echo "SHOULD_BUILD=true" >> $GITHUB_ENV
            exit 0
          fi

          echo "No relevant files changed - skipping build"
          echo "SHOULD_BUILD=false" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        if: env.SHOULD_BUILD == 'true'
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        if: env.SHOULD_BUILD == 'true'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push base image
        if: env.SHOULD_BUILD == 'true'
        uses: docker/build-push-action@v6
        with:
          push: true
          file: Dockerfile.base
          target: snyk-base-${{ matrix.base_type }}
          tags: snyk/snyk:base-${{ matrix.base_type }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: CLI_VERSION=latest

      - name: Skip build (no changes)
        if: env.SHOULD_BUILD == 'false'
        run: |
          echo "Skipping build for ${{ matrix.base_type }} - no relevant file changes detected"
          echo "Workflow completed successfully to allow downstream workflows to trigger"
